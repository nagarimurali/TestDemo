export class BaselineCommandBar extends React.Component<IBaselineCommandBarProps> {
    constructor(props: IBaselineCommandBarProps) {
        super(props);
    }

    render() {
        const { displayMode, item } = this.props;

        // Determine if the Freeze command should be disabled
        const isFreezeDisabled = item.status === 'Frozen' || item.status === 'Complete';

        // Filter and configure items based on the displayMode and item status
        const items = displayMode === 4 ? [
            { key: 'save', text: 'Save', iconProps: { iconName: 'Save' }, onClick: () => console.log('Save') },
            { key: 'cancel', text: 'Cancel', iconProps: { iconName: 'Cancel' }, onClick: () => console.log('Cancel') },
        ] : [
            { key: 'newVersion', text: 'New Version', iconProps: { iconName: 'Add' }, onClick: () => console.log('New Version') },
            { key: 'freeze', text: 'Freeze', iconProps: { iconName: 'Lock' }, onClick: () => console.log('Freeze'), disabled: isFreezeDisabled },
            { key: 'save', text: 'Save', iconProps: { iconName: 'Save' }, onClick: () => console.log('Save') },
            { key: 'cancel', text: 'Cancel', iconProps: { iconName: 'Cancel' }, onClick: () => console.log('Cancel') },
        ];

        console.log("props", this.props);

        return (
            <CommandBar
                items={items}
            />
        );
    }
      }
             
